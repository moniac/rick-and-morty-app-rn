{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mohammed\\\\Documents\\\\mohammedmulazada\\\\reactnative\\\\rick-and-morty-app-rn\\\\screens\\\\HomeScreen.js\";\nimport * as WebBrowser from 'expo-web-browser';\nimport React, { useEffect, useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { MonoText } from \"../components/StyledText\";\nimport { getCharacter } from \"../hooks/useApi\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nexport default function HomeScreen(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      characters = _useState2[0],\n      setCharacters = _useState2[1];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      nextPage = _useState4[0],\n      setNextPage = _useState4[1];\n\n  var _useState5 = useState(undefined),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pageLimit = _useState6[0],\n      setPageLimit = _useState6[1];\n\n  var navigation = props.navigation;\n\n  var _useState7 = useState(undefined),\n      _useState8 = _slicedToArray(_useState7, 2),\n      search = _useState8[0],\n      setSearch = _useState8[1];\n\n  useEffect(function () {\n    console.log(search);\n\n    if (!search) {\n      getCharacter({\n        page: 1\n      }).then(function (char) {\n        setNextPage(1);\n        setCharacters(function (prevVal) {\n          return char.results;\n        });\n      });\n      return;\n    }\n\n    function getCharacterBySearch() {\n      var response;\n      return _regeneratorRuntime.async(function getCharacterBySearch$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(getCharacter({\n                name: search\n              }));\n\n            case 2:\n              response = _context.sent;\n              setCharacters(response.results);\n              console.log(response.results);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    getCharacterBySearch();\n  }, [search]);\n  useEffect(function () {\n    function getTest() {\n      var response;\n      return _regeneratorRuntime.async(function getTest$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(getCharacter({\n                page: 1\n              }));\n\n            case 2:\n              response = _context2.sent;\n              setCharacters(function (prevValues) {\n                return response.results;\n              });\n              setPageLimit(response.info.pages);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    getTest();\n  }, []);\n  useEffect(function () {\n    if (nextPage > pageLimit) {\n      return;\n    }\n\n    function getNext() {\n      var data, response, merged;\n      return _regeneratorRuntime.async(function getNext$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(fetch('https://rickandmortyapi.com/api/character/?page=' + nextPage));\n\n            case 2:\n              data = _context3.sent;\n              _context3.next = 5;\n              return _regeneratorRuntime.awrap(data.json());\n\n            case 5:\n              response = _context3.sent;\n              merged = [].concat(_toConsumableArray(characters), _toConsumableArray(response.results));\n              setCharacters(merged);\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    getNext();\n  }, [nextPage]);\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 3\n    }\n  }, React.createElement(FlatList, {\n    centerContent: true,\n    numColumns: 1,\n    data: characters,\n    ListHeaderComponent: React.createElement(TextInput, {\n      onChangeText: function onChangeText(event) {\n        return console.log(event);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 6\n      }\n    }),\n    contentContainerStyle: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      alignSelf: 'center'\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 6\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 7\n        }\n      }, React.createElement(Image, {\n        style: {\n          width: 300,\n          height: 300,\n          marginTop: 12\n        },\n        resizeMode: 'cover',\n        source: {\n          uri: item.image\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 8\n        }\n      })), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 7\n        }\n      }, React.createElement(Button, {\n        title: item.name,\n        onPress: function onPress() {\n          return navigation.navigate('CharacterDetail', {\n            characterId: item.id,\n            title: item.name\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 8\n        }\n      })));\n    },\n    keyExtractor: function keyExtractor(char) {\n      return char.id + \" - \" + char.name;\n    },\n    onEndReached: function onEndReached() {\n      if (nextPage) {\n        console.log('times');\n        console.log(nextPage + 1);\n        setNextPage(function (v) {\n          return parseInt(v + 1, 10);\n        });\n      }\n    },\n    onEndReachedThreshold: 0.1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 4\n    }\n  }));\n}\nHomeScreen.navigationOptions = {\n  header: null\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["C:/Users/Mohammed/Documents/mohammedmulazada/reactnative/rick-and-morty-app-rn/screens/HomeScreen.js"],"names":["WebBrowser","React","useEffect","useState","ScrollView","MonoText","getCharacter","SafeAreaView","HomeScreen","props","characters","setCharacters","nextPage","setNextPage","undefined","pageLimit","setPageLimit","navigation","search","setSearch","console","log","page","then","char","prevVal","results","getCharacterBySearch","name","response","getTest","prevValues","info","pages","getNext","fetch","data","json","merged","styles","container","event","justifyContent","alignItems","alignSelf","item","width","height","marginTop","uri","image","navigate","characterId","id","title","v","parseInt","navigationOptions","header","StyleSheet","create","flex"],"mappings":"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","sourcesContent":["import * as WebBrowser from 'expo-web-browser';\nimport React, { useEffect, useState } from 'react';\nimport {\n\tImage,\n\tPlatform,\n\tStyleSheet,\n\tText,\n\tTextInput,\n\tTouchableOpacity,\n\tView,\n\tFlatList,\n\tButton,\n} from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\n\nimport { MonoText } from '../components/StyledText';\nimport { getCharacter } from '../hooks/useApi';\nimport { SafeAreaView } from 'react-native-safe-area-context';\n\nexport default function HomeScreen(props) {\n\tconst [characters, setCharacters] = useState([]);\n\tconst [nextPage, setNextPage] = useState(1);\n\tconst [pageLimit, setPageLimit] = useState(undefined);\n\tconst { navigation } = props;\n\n\tconst [search, setSearch] = useState(undefined);\n\n\tuseEffect(() => {\n\t\tconsole.log(search);\n\t\tif (!search) {\n\t\t\tgetCharacter({ page: 1 }).then((char) => {\n\t\t\t\tsetNextPage(1);\n\t\t\t\tsetCharacters((prevVal) => char.results);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tasync function getCharacterBySearch() {\n\t\t\tconst response = await getCharacter({ name: search });\n\t\t\tsetCharacters(response.results);\n\t\t\tconsole.log(response.results);\n\t\t}\n\n\t\tgetCharacterBySearch();\n\t}, [search]);\n\n\tuseEffect(() => {\n\t\tasync function getTest() {\n\t\t\tconst response = await getCharacter({ page: 1 });\n\t\t\tsetCharacters((prevValues) => response.results);\n\t\t\tsetPageLimit(response.info.pages);\n\t\t}\n\t\tgetTest();\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (nextPage > pageLimit) {\n\t\t\treturn;\n\t\t}\n\n\t\tasync function getNext() {\n\t\t\tconst data = await fetch(\n\t\t\t\t'https://rickandmortyapi.com/api/character/?page=' + nextPage,\n\t\t\t);\n\t\t\tconst response = await data.json();\n\n\t\t\tconst merged = [...characters, ...response.results];\n\t\t\t// function removeDuplicates(array, key) {\n\t\t\t// \tlet lookup = new Set();\n\t\t\t// \treturn array.filter(\n\t\t\t// \t\t(obj) => !lookup.has(obj[key]) && lookup.add(obj[key]),\n\t\t\t// \t);\n\t\t\t// }\n\t\t\t// const filtered = removeDuplicates(merged, 'id');\n\n\t\t\tsetCharacters(merged);\n\t\t}\n\n\t\tgetNext();\n\t}, [nextPage]);\n\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t<FlatList\n\t\t\t\tcenterContent={true}\n\t\t\t\tnumColumns={1}\n\t\t\t\tdata={characters}\n\t\t\t\tListHeaderComponent={\n\t\t\t\t\t<TextInput onChangeText={(event) => console.log(event)} />\n\t\t\t\t}\n\t\t\t\tcontentContainerStyle={{\n\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\talignItems: 'center',\n\t\t\t\t\talignSelf: 'center',\n\t\t\t\t}}\n\t\t\t\trenderItem={({ item }) => (\n\t\t\t\t\t<View>\n\t\t\t\t\t\t<View>\n\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\twidth: 300,\n\t\t\t\t\t\t\t\t\theight: 300,\n\t\t\t\t\t\t\t\t\tmarginTop: 12,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tresizeMode={'cover'}\n\t\t\t\t\t\t\t\tsource={{ uri: item.image }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t<View>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttitle={item.name}\n\t\t\t\t\t\t\t\tonPress={() =>\n\t\t\t\t\t\t\t\t\tnavigation.navigate('CharacterDetail', {\n\t\t\t\t\t\t\t\t\t\tcharacterId: item.id,\n\t\t\t\t\t\t\t\t\t\ttitle: item.name,\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t</View>\n\t\t\t\t)}\n\t\t\t\tkeyExtractor={(char) => `${char.id} - ${char.name}`}\n\t\t\t\tonEndReached={() => {\n\t\t\t\t\tif (nextPage) {\n\t\t\t\t\t\tconsole.log('times');\n\t\t\t\t\t\tconsole.log(nextPage + 1);\n\t\t\t\t\t\tsetNextPage((v) => parseInt(v + 1, 10));\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tonEndReachedThreshold={0.1}\n\t\t\t/>\n\t\t\t{/* <View style={styles.getStartedContainer}>\n\t\t\t\t\t{characters.length &&\n\t\t\t\t\t\tcharacters.map((char) => {\n\t\t\t\t\t\t\treturn <p>{char.name}</p>;\n\t\t\t\t\t\t})}\n\t\t\t\t</View> */}\n\t\t</View>\n\t);\n}\n\nHomeScreen.navigationOptions = {\n\theader: null,\n};\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t},\n});\n"]},"metadata":{},"sourceType":"module"}