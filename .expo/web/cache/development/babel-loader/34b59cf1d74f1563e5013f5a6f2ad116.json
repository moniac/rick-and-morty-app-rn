{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mohammed\\\\Documents\\\\mohammedmulazada\\\\reactnative\\\\rick-and-morty-app-rn\\\\screens\\\\CharacterDetailScreen.js\";\nimport { Ionicons } from '@expo/vector-icons';\nimport * as WebBrowser from 'expo-web-browser';\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { RectButton, ScrollView } from 'react-native-gesture-handler';\nimport { getCharacter } from \"../hooks/useApi\";\nexport default function CharacterDetailScreen(props) {\n  var _character$location;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      character = _useState2[0],\n      setCharacter = _useState2[1];\n\n  var params = props.route.params,\n      navigation = props.navigation;\n  var characterId = params.characterId;\n  console.log(props.navigation);\n  useEffect(function () {\n    function fetchCharacter() {\n      var response;\n      return _regeneratorRuntime.async(function fetchCharacter$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(getCharacter(characterId));\n\n            case 2:\n              response = _context.sent;\n              console.log(response);\n              setCharacter(response);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchCharacter();\n  }, []);\n\n  if (!character) {\n    return null;\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 3\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: character.image\n    },\n    style: {\n      width: '100%',\n      height: 300,\n      marginTop: 12\n    },\n    resizeMode: 'contain',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }\n  }), React.createElement(View, {\n    style: {\n      width: '100%',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, character.name, \" - \", character.gender, \" - \", character.species), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, character == null ? void 0 : (_character$location = character.location) == null ? void 0 : _character$location.name), React.createElement(FlatList, {\n    data: character.episode,\n    ListHeaderComponent: React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 27\n      }\n    }, \"All episode appearances\"),\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 32\n        }\n      }, item);\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item;\n    },\n    style: {\n      height: '100%',\n      overflow: 'scroll',\n      maxHeight: 200\n    },\n    contentContainerStyle: {\n      overflow: 'scroll'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#fafafa',\n    overflow: 'scroll',\n    height: '100%'\n  }\n});","map":{"version":3,"sources":["C:/Users/Mohammed/Documents/mohammedmulazada/reactnative/rick-and-morty-app-rn/screens/CharacterDetailScreen.js"],"names":["Ionicons","WebBrowser","React","useEffect","useState","RectButton","ScrollView","getCharacter","CharacterDetailScreen","props","character","setCharacter","params","route","navigation","characterId","console","log","fetchCharacter","response","styles","container","uri","image","width","height","marginTop","alignItems","name","gender","species","location","episode","item","overflow","maxHeight","StyleSheet","create","backgroundColor"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,oBAAzB;AACA,OAAO,KAAKC,UAAZ,MAA4B,kBAA5B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;AAEA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,8BAAvC;AACA,SAASC,YAAT;AAEA,eAAe,SAASC,qBAAT,CAA+BC,KAA/B,EAAsC;AAAA;;AAAA,kBAClBL,QAAQ,CAAC,EAAD,CADU;AAAA;AAAA,MAC7CM,SAD6C;AAAA,MAClCC,YADkC;;AAAA,MAG1CC,MAH0C,GAKhDH,KALgD,CAGnDI,KAHmD,CAG1CD,MAH0C;AAAA,MAInDE,UAJmD,GAKhDL,KALgD,CAInDK,UAJmD;AAAA,MAM5CC,WAN4C,GAM5BH,MAN4B,CAM5CG,WAN4C;AAOpDC,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACK,UAAlB;AAEAX,EAAAA,SAAS,CAAC,YAAM;AACf,aAAee,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACwBX,YAAY,CAACQ,WAAD,CADpC;;AAAA;AACOI,cAAAA,QADP;AAECH,cAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;AACAR,cAAAA,YAAY,CAACQ,QAAD,CAAZ;;AAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMAD,IAAAA,cAAc;AACd,GARQ,EAQN,EARM,CAAT;;AAUA,MAAI,CAACR,SAAL,EAAgB;AACf,WAAO,IAAP;AACA;;AAED,SACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEU,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,KAAD;AACC,IAAA,MAAM,EAAE;AAAEC,MAAAA,GAAG,EAAEZ,SAAS,CAACa;AAAjB,KADT;AAEC,IAAA,KAAK,EAAE;AACNC,MAAAA,KAAK,EAAE,MADD;AAENC,MAAAA,MAAM,EAAE,GAFF;AAGNC,MAAAA,SAAS,EAAE;AAHL,KAFR;AAOC,IAAA,UAAU,EAAE,SAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAUC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEF,MAAAA,KAAK,EAAE,MAAT;AAAiBG,MAAAA,UAAU,EAAE;AAA7B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEjB,SAAS,CAACkB,IADZ,SACqBlB,SAAS,CAACmB,MAD/B,SAC0CnB,SAAS,CAACoB,OADpD,CADD,EAIC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOpB,SAAP,2CAAOA,SAAS,CAAEqB,QAAlB,qBAAO,oBAAqBH,IAA5B,CAJD,EAKC,oBAAC,QAAD;AACC,IAAA,IAAI,EAAElB,SAAS,CAACsB,OADjB;AAEC,IAAA,mBAAmB,EAAE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFtB;AAGC,IAAA,UAAU,EAAE;AAAA,UAAGC,IAAH,QAAGA,IAAH;AAAA,aAAc,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOA,IAAP,CAAd;AAAA,KAHb;AAIC,IAAA,YAAY,EAAE,sBAACA,IAAD;AAAA,aAAUA,IAAV;AAAA,KAJf;AAKC,IAAA,KAAK,EAAE;AACNR,MAAAA,MAAM,EAAE,MADF;AAENS,MAAAA,QAAQ,EAAE,QAFJ;AAGNC,MAAAA,SAAS,EAAE;AAHL,KALR;AAUC,IAAA,qBAAqB,EAAE;AAAED,MAAAA,QAAQ,EAAE;AAAZ,KAVxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALD,CAVD,CADD;AA+BA;AAED,IAAMd,MAAM,GAAGgB,UAAU,CAACC,MAAX,CAAkB;AAChChB,EAAAA,SAAS,EAAE;AACViB,IAAAA,eAAe,EAAE,SADP;AAEVJ,IAAAA,QAAQ,EAAE,QAFA;AAGVT,IAAAA,MAAM,EAAE;AAHE;AADqB,CAAlB,CAAf","sourcesContent":["import { Ionicons } from '@expo/vector-icons';\r\nimport * as WebBrowser from 'expo-web-browser';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { StyleSheet, Text, View, Image, FlatList } from 'react-native';\r\nimport { RectButton, ScrollView } from 'react-native-gesture-handler';\r\nimport { getCharacter } from '../hooks/useApi';\r\n\r\nexport default function CharacterDetailScreen(props) {\r\n\tconst [character, setCharacter] = useState({});\r\n\tconst {\r\n\t\troute: { params },\r\n\t\tnavigation,\r\n\t} = props;\r\n\tconst { characterId } = params;\r\n\tconsole.log(props.navigation);\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function fetchCharacter() {\r\n\t\t\tconst response = await getCharacter(characterId);\r\n\t\t\tconsole.log(response);\r\n\t\t\tsetCharacter(response);\r\n\t\t}\r\n\r\n\t\tfetchCharacter();\r\n\t}, []);\r\n\r\n\tif (!character) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<View style={styles.container}>\r\n\t\t\t<Image\r\n\t\t\t\tsource={{ uri: character.image }}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: 300,\r\n\t\t\t\t\tmarginTop: 12,\r\n\t\t\t\t}}\r\n\t\t\t\tresizeMode={'contain'}\r\n\t\t\t/>\r\n\t\t\t<View style={{ width: '100%', alignItems: 'center' }}>\r\n\t\t\t\t<Text>\r\n\t\t\t\t\t{character.name} - {character.gender} - {character.species}\r\n\t\t\t\t</Text>\r\n\t\t\t\t<Text>{character?.location?.name}</Text>\r\n\t\t\t\t<FlatList\r\n\t\t\t\t\tdata={character.episode}\r\n\t\t\t\t\tListHeaderComponent={<Text>All episode appearances</Text>}\r\n\t\t\t\t\trenderItem={({ item }) => <Text>{item}</Text>}\r\n\t\t\t\t\tkeyExtractor={(item) => item}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\theight: '100%',\r\n\t\t\t\t\t\toverflow: 'scroll',\r\n\t\t\t\t\t\tmaxHeight: 200,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tcontentContainerStyle={{ overflow: 'scroll' }}\r\n\t\t\t\t/>\r\n\t\t\t</View>\r\n\t\t</View>\r\n\t);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tbackgroundColor: '#fafafa',\r\n\t\toverflow: 'scroll',\r\n\t\theight: '100%',\r\n\t},\r\n});\r\n"]},"metadata":{},"sourceType":"module"}