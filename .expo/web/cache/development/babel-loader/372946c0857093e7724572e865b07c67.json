{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mohammed\\\\Documents\\\\mohammedmulazada\\\\reactnative\\\\rick-and-morty-app-rn\\\\screens\\\\CharacterDetailScreen.js\";\nimport { Ionicons } from '@expo/vector-icons';\nimport * as WebBrowser from 'expo-web-browser';\nimport React, { useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { RectButton, ScrollView } from 'react-native-gesture-handler';\nimport { getCharacter } from \"../hooks/useApi\";\nexport default function CharacterDetailScreen(props) {\n  var id = props.id;\n  useEffect(function () {\n    function fetchCharacter() {\n      var response;\n      return _regeneratorRuntime.async(function fetchCharacter$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(getCharacter({\n                id: id\n              }));\n\n            case 2:\n              response = _context.sent;\n              console.log(response);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchCharacter();\n  }, []);\n  console.log(props.route);\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 3\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 4\n    }\n  }, id));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fafafa'\n  }\n});","map":{"version":3,"sources":["C:/Users/Mohammed/Documents/mohammedmulazada/reactnative/rick-and-morty-app-rn/screens/CharacterDetailScreen.js"],"names":["Ionicons","WebBrowser","React","useEffect","RectButton","ScrollView","getCharacter","CharacterDetailScreen","props","id","fetchCharacter","response","console","log","route","styles","container","StyleSheet","create","flex","backgroundColor"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,oBAAzB;AACA,OAAO,KAAKC,UAAZ,MAA4B,kBAA5B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,8BAAvC;AACA,SAASC,YAAT;AAEA,eAAe,SAASC,qBAAT,CAA+BC,KAA/B,EAAsC;AAAA,MAC5CC,EAD4C,GACrCD,KADqC,CAC5CC,EAD4C;AAEpDN,EAAAA,SAAS,CAAC,YAAM;AACf,aAAeO,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACwBJ,YAAY,CAAC;AAAEG,gBAAAA,EAAE,EAAFA;AAAF,eAAD,CADpC;;AAAA;AACOE,cAAAA,QADP;AAECC,cAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKAD,IAAAA,cAAc;AACd,GAPQ,EAON,EAPM,CAAT;AAQAE,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACM,KAAlB;AACA,SACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOP,EAAP,CADD,CADD;AAKA;AAED,IAAMM,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAChCF,EAAAA,SAAS,EAAE;AACVG,IAAAA,IAAI,EAAE,CADI;AAEVC,IAAAA,eAAe,EAAE;AAFP;AADqB,CAAlB,CAAf","sourcesContent":["import { Ionicons } from '@expo/vector-icons';\r\nimport * as WebBrowser from 'expo-web-browser';\r\nimport React, { useEffect } from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport { RectButton, ScrollView } from 'react-native-gesture-handler';\r\nimport { getCharacter } from '../hooks/useApi';\r\n\r\nexport default function CharacterDetailScreen(props) {\r\n\tconst { id } = props;\r\n\tuseEffect(() => {\r\n\t\tasync function fetchCharacter() {\r\n\t\t\tconst response = await getCharacter({ id });\r\n\t\t\tconsole.log(response);\r\n\t\t}\r\n\r\n\t\tfetchCharacter();\r\n\t}, []);\r\n\tconsole.log(props.route);\r\n\treturn (\r\n\t\t<View style={styles.container}>\r\n\t\t\t<Text>{id}</Text>\r\n\t\t</View>\r\n\t);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n\t\tbackgroundColor: '#fafafa',\r\n\t},\r\n});\r\n"]},"metadata":{},"sourceType":"module"}