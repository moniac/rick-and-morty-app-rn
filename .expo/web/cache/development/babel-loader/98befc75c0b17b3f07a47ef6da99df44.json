{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mohammed\\\\Documents\\\\mohammedmulazada\\\\reactnative\\\\rick-and-morty-app-rn\\\\screens\\\\HomeScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as WebBrowser from 'expo-web-browser';\nimport React, { useEffect, useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { MonoText } from \"../components/StyledText\";\nimport { getCharacter } from \"../hooks/useApi\";\nexport default function HomeScreen() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      characters = _useState2[0],\n      setCharacters = _useState2[1];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      nextPage = _useState4[0],\n      setNextPage = _useState4[1];\n\n  useEffect(function () {\n    function getTest() {\n      var response;\n      return _regeneratorRuntime.async(function getTest$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(getCharacter({\n                page: 1\n              }));\n\n            case 2:\n              response = _context.sent;\n              setCharacters(function (prevValues) {\n                return [].concat(_toConsumableArray(prevValues), _toConsumableArray(response.results));\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    getTest();\n  }, []);\n  useEffect(function () {\n    console.log(nextPage);\n\n    function getNext() {\n      var data, response, merged, removeDuplicates, filtered;\n      return _regeneratorRuntime.async(function getNext$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              removeDuplicates = function _removeDuplicates(array, key) {\n                var lookup = new Set();\n                return array.filter(function (obj) {\n                  return !lookup.has(obj[key]) && lookup.add(obj[key]);\n                });\n              };\n\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(fetch('https://rickandmortyapi.com/api/character/?page=' + nextPage));\n\n            case 3:\n              data = _context2.sent;\n              _context2.next = 6;\n              return _regeneratorRuntime.awrap(data.json());\n\n            case 6:\n              response = _context2.sent;\n              console.log(response);\n              merged = [].concat(_toConsumableArray(characters), _toConsumableArray(response.results));\n              filtered = removeDuplicates(merged, 'id');\n              console.log(filtered);\n              setCharacters(filtered);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    getNext();\n  }, [nextPage]);\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 3\n    }\n  }, characters.length, React.createElement(FlatList, {\n    data: characters,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 6\n        }\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }\n      }, React.createElement(\"img\", {\n        src: item.image,\n        alt: item.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 8\n        }\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 8\n        }\n      }, item.name)));\n    },\n    keyExtractor: function keyExtractor(char) {\n      return char.id + \" - \" + char.name;\n    },\n    onEndReached: function onEndReached() {\n      if (nextPage) {\n        console.log('times');\n        console.log(nextPage + 1);\n        setNextPage(function (v) {\n          return parseInt(v + 1, 10);\n        });\n      }\n    },\n    onEndReachedThreshold: 0.1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }\n  }));\n}\nHomeScreen.navigationOptions = {\n  header: null\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  developmentModeText: {\n    marginBottom: 20,\n    color: 'rgba(0,0,0,0.4)',\n    fontSize: 14,\n    lineHeight: 19,\n    textAlign: 'center'\n  },\n  contentContainer: {\n    paddingTop: 30\n  },\n  welcomeContainer: {\n    alignItems: 'center',\n    marginTop: 10,\n    marginBottom: 20\n  },\n  welcomeImage: {\n    width: 100,\n    height: 80,\n    resizeMode: 'contain',\n    marginTop: 3,\n    marginLeft: -10\n  },\n  getStartedContainer: {\n    alignItems: 'center',\n    marginHorizontal: 50\n  },\n  homeScreenFilename: {\n    marginVertical: 7\n  },\n  codeHighlightText: {\n    color: 'rgba(96,100,109, 0.8)'\n  },\n  codeHighlightContainer: {\n    backgroundColor: 'rgba(0,0,0,0.05)',\n    borderRadius: 3,\n    paddingHorizontal: 4\n  },\n  getStartedText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    lineHeight: 24,\n    textAlign: 'center'\n  },\n  tabBarInfoContainer: _objectSpread(_objectSpread({\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0\n  }, Platform.select({\n    ios: {\n      shadowColor: 'black',\n      shadowOffset: {\n        width: 0,\n        height: -3\n      },\n      shadowOpacity: 0.1,\n      shadowRadius: 3\n    },\n    android: {\n      elevation: 20\n    }\n  })), {}, {\n    alignItems: 'center',\n    backgroundColor: '#fbfbfb',\n    paddingVertical: 20\n  }),\n  tabBarInfoText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    textAlign: 'center'\n  },\n  navigationFilename: {\n    marginTop: 5\n  },\n  helpContainer: {\n    marginTop: 15,\n    alignItems: 'center'\n  },\n  helpLink: {\n    paddingVertical: 15\n  },\n  helpLinkText: {\n    fontSize: 14,\n    color: '#2e78b7'\n  }\n});","map":{"version":3,"sources":["C:/Users/Mohammed/Documents/mohammedmulazada/reactnative/rick-and-morty-app-rn/screens/HomeScreen.js"],"names":["WebBrowser","React","useEffect","useState","ScrollView","MonoText","getCharacter","HomeScreen","characters","setCharacters","nextPage","setNextPage","getTest","page","response","prevValues","results","console","log","getNext","removeDuplicates","array","key","lookup","Set","filter","obj","has","add","fetch","data","json","merged","filtered","styles","container","length","item","image","name","char","id","v","parseInt","navigationOptions","header","StyleSheet","create","flex","backgroundColor","developmentModeText","marginBottom","color","fontSize","lineHeight","textAlign","contentContainer","paddingTop","welcomeContainer","alignItems","marginTop","welcomeImage","width","height","resizeMode","marginLeft","getStartedContainer","marginHorizontal","homeScreenFilename","marginVertical","codeHighlightText","codeHighlightContainer","borderRadius","paddingHorizontal","getStartedText","tabBarInfoContainer","position","bottom","left","right","Platform","select","ios","shadowColor","shadowOffset","shadowOpacity","shadowRadius","android","elevation","paddingVertical","tabBarInfoText","navigationFilename","helpContainer","helpLink","helpLinkText"],"mappings":"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","sourcesContent":["import * as WebBrowser from 'expo-web-browser';\nimport React, { useEffect, useState } from 'react';\nimport {\n\tImage,\n\tPlatform,\n\tStyleSheet,\n\tText,\n\tTouchableOpacity,\n\tView,\n\tFlatList,\n} from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\n\nimport { MonoText } from '../components/StyledText';\nimport { getCharacter } from '../hooks/useApi';\n\nexport default function HomeScreen() {\n\tconst [characters, setCharacters] = useState([]);\n\tconst [nextPage, setNextPage] = useState(1);\n\n\tuseEffect(() => {\n\t\tasync function getTest() {\n\t\t\tconst response = await getCharacter({ page: 1 });\n\t\t\tsetCharacters((prevValues) => [...prevValues, ...response.results]);\n\t\t}\n\t\tgetTest();\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconsole.log(nextPage);\n\t\tasync function getNext() {\n\t\t\tconst data = await fetch(\n\t\t\t\t'https://rickandmortyapi.com/api/character/?page=' + nextPage,\n\t\t\t);\n\t\t\tconst response = await data.json();\n\t\t\tconsole.log(response);\n\t\t\tconst merged = [...characters, ...response.results];\n\t\t\tfunction removeDuplicates(array, key) {\n\t\t\t\tlet lookup = new Set();\n\t\t\t\treturn array.filter(\n\t\t\t\t\t(obj) => !lookup.has(obj[key]) && lookup.add(obj[key]),\n\t\t\t\t);\n\t\t\t}\n\t\t\tconst filtered = removeDuplicates(merged, 'id');\n\t\t\tconsole.log(filtered);\n\t\t\tsetCharacters(filtered);\n\t\t}\n\n\t\tgetNext();\n\t}, [nextPage]);\n\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t{characters.length}\n\t\t\t<FlatList\n\t\t\t\tdata={characters}\n\t\t\t\trenderItem={({ item }) => (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<img src={item.image} alt={item.name} />\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<p>{item.name}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\tkeyExtractor={(char) => `${char.id} - ${char.name}`}\n\t\t\t\tonEndReached={() => {\n\t\t\t\t\tif (nextPage) {\n\t\t\t\t\t\tconsole.log('times');\n\t\t\t\t\t\tconsole.log(nextPage + 1);\n\t\t\t\t\t\tsetNextPage((v) => parseInt(v + 1, 10));\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tonEndReachedThreshold={0.1}\n\t\t\t/>\n\t\t\t{/* <View style={styles.getStartedContainer}>\n\t\t\t\t\t{characters.length &&\n\t\t\t\t\t\tcharacters.map((char) => {\n\t\t\t\t\t\t\treturn <p>{char.name}</p>;\n\t\t\t\t\t\t})}\n\t\t\t\t</View> */}\n\t\t</View>\n\t);\n}\n\nHomeScreen.navigationOptions = {\n\theader: null,\n};\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tbackgroundColor: '#fff',\n\t},\n\tdevelopmentModeText: {\n\t\tmarginBottom: 20,\n\t\tcolor: 'rgba(0,0,0,0.4)',\n\t\tfontSize: 14,\n\t\tlineHeight: 19,\n\t\ttextAlign: 'center',\n\t},\n\tcontentContainer: {\n\t\tpaddingTop: 30,\n\t},\n\twelcomeContainer: {\n\t\talignItems: 'center',\n\t\tmarginTop: 10,\n\t\tmarginBottom: 20,\n\t},\n\twelcomeImage: {\n\t\twidth: 100,\n\t\theight: 80,\n\t\tresizeMode: 'contain',\n\t\tmarginTop: 3,\n\t\tmarginLeft: -10,\n\t},\n\tgetStartedContainer: {\n\t\talignItems: 'center',\n\t\tmarginHorizontal: 50,\n\t},\n\thomeScreenFilename: {\n\t\tmarginVertical: 7,\n\t},\n\tcodeHighlightText: {\n\t\tcolor: 'rgba(96,100,109, 0.8)',\n\t},\n\tcodeHighlightContainer: {\n\t\tbackgroundColor: 'rgba(0,0,0,0.05)',\n\t\tborderRadius: 3,\n\t\tpaddingHorizontal: 4,\n\t},\n\tgetStartedText: {\n\t\tfontSize: 17,\n\t\tcolor: 'rgba(96,100,109, 1)',\n\t\tlineHeight: 24,\n\t\ttextAlign: 'center',\n\t},\n\ttabBarInfoContainer: {\n\t\tposition: 'absolute',\n\t\tbottom: 0,\n\t\tleft: 0,\n\t\tright: 0,\n\t\t...Platform.select({\n\t\t\tios: {\n\t\t\t\tshadowColor: 'black',\n\t\t\t\tshadowOffset: { width: 0, height: -3 },\n\t\t\t\tshadowOpacity: 0.1,\n\t\t\t\tshadowRadius: 3,\n\t\t\t},\n\t\t\tandroid: {\n\t\t\t\televation: 20,\n\t\t\t},\n\t\t}),\n\t\talignItems: 'center',\n\t\tbackgroundColor: '#fbfbfb',\n\t\tpaddingVertical: 20,\n\t},\n\ttabBarInfoText: {\n\t\tfontSize: 17,\n\t\tcolor: 'rgba(96,100,109, 1)',\n\t\ttextAlign: 'center',\n\t},\n\tnavigationFilename: {\n\t\tmarginTop: 5,\n\t},\n\thelpContainer: {\n\t\tmarginTop: 15,\n\t\talignItems: 'center',\n\t},\n\thelpLink: {\n\t\tpaddingVertical: 15,\n\t},\n\thelpLinkText: {\n\t\tfontSize: 14,\n\t\tcolor: '#2e78b7',\n\t},\n});\n"]},"metadata":{},"sourceType":"module"}