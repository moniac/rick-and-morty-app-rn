{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mohammed\\\\Documents\\\\mohammedmulazada\\\\reactnative\\\\rick-and-morty-app-rn\\\\screens\\\\CharacterDetailScreen.js\";\nimport { Ionicons } from '@expo/vector-icons';\nimport * as WebBrowser from 'expo-web-browser';\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { RectButton, ScrollView } from 'react-native-gesture-handler';\nimport { getCharacter } from \"../hooks/useApi\";\nexport default function CharacterDetailScreen(props) {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      character = _useState2[0],\n      setCharacter = _useState2[1];\n\n  var params = props.route.params;\n  var characterId = params.characterId;\n  useEffect(function () {\n    function fetchCharacter() {\n      var response;\n      return _regeneratorRuntime.async(function fetchCharacter$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(getCharacter(characterId));\n\n            case 2:\n              response = _context.sent;\n              console.log(response);\n              setCharacter(response);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchCharacter();\n  }, []);\n  console.log(props.route);\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 3\n    }\n  }, React.createElement(Image, {\n    ur: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }\n  }, character.name));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fafafa'\n  }\n});","map":{"version":3,"sources":["C:/Users/Mohammed/Documents/mohammedmulazada/reactnative/rick-and-morty-app-rn/screens/CharacterDetailScreen.js"],"names":["Ionicons","WebBrowser","React","useEffect","useState","RectButton","ScrollView","getCharacter","CharacterDetailScreen","props","character","setCharacter","params","route","characterId","fetchCharacter","response","console","log","styles","container","name","StyleSheet","create","flex","backgroundColor"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,oBAAzB;AACA,OAAO,KAAKC,UAAZ,MAA4B,kBAA5B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;AAEA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,8BAAvC;AACA,SAASC,YAAT;AAEA,eAAe,SAASC,qBAAT,CAA+BC,KAA/B,EAAsC;AAAA,kBAClBL,QAAQ,CAAC,EAAD,CADU;AAAA;AAAA,MAC7CM,SAD6C;AAAA,MAClCC,YADkC;;AAAA,MAG1CC,MAH0C,GAIhDH,KAJgD,CAGnDI,KAHmD,CAG1CD,MAH0C;AAAA,MAK5CE,WAL4C,GAK5BF,MAL4B,CAK5CE,WAL4C;AAOpDX,EAAAA,SAAS,CAAC,YAAM;AACf,aAAeY,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACwBR,YAAY,CAACO,WAAD,CADpC;;AAAA;AACOE,cAAAA,QADP;AAECC,cAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAL,cAAAA,YAAY,CAACK,QAAD,CAAZ;;AAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMAD,IAAAA,cAAc;AACd,GARQ,EAQN,EARM,CAAT;AASAE,EAAAA,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACI,KAAlB;AACA,SACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEM,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,KAAD;AAAO,IAAA,EAAE,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOV,SAAS,CAACW,IAAjB,CAFD,CADD;AAMA;AAED,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAChCH,EAAAA,SAAS,EAAE;AACVI,IAAAA,IAAI,EAAE,CADI;AAEVC,IAAAA,eAAe,EAAE;AAFP;AADqB,CAAlB,CAAf","sourcesContent":["import { Ionicons } from '@expo/vector-icons';\r\nimport * as WebBrowser from 'expo-web-browser';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { StyleSheet, Text, View, Image } from 'react-native';\r\nimport { RectButton, ScrollView } from 'react-native-gesture-handler';\r\nimport { getCharacter } from '../hooks/useApi';\r\n\r\nexport default function CharacterDetailScreen(props) {\r\n\tconst [character, setCharacter] = useState({});\r\n\tconst {\r\n\t\troute: { params },\r\n\t} = props;\r\n\tconst { characterId } = params;\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function fetchCharacter() {\r\n\t\t\tconst response = await getCharacter(characterId);\r\n\t\t\tconsole.log(response);\r\n\t\t\tsetCharacter(response);\r\n\t\t}\r\n\r\n\t\tfetchCharacter();\r\n\t}, []);\r\n\tconsole.log(props.route);\r\n\treturn (\r\n\t\t<View style={styles.container}>\r\n\t\t\t<Image ur />\r\n\t\t\t<Text>{character.name}</Text>\r\n\t\t</View>\r\n\t);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n\t\tbackgroundColor: '#fafafa',\r\n\t},\r\n});\r\n"]},"metadata":{},"sourceType":"module"}