{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mohammed\\\\Documents\\\\mohammedmulazada\\\\reactnative\\\\rick-and-morty-app-rn\\\\screens\\\\HomeScreen.js\";\nimport * as WebBrowser from 'expo-web-browser';\nimport React, { useEffect, useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { MonoText } from \"../components/StyledText\";\nimport { getCharacter } from \"../hooks/useApi\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nexport default function HomeScreen() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      characters = _useState2[0],\n      setCharacters = _useState2[1];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      nextPage = _useState4[0],\n      setNextPage = _useState4[1];\n\n  var _useState5 = useState(undefined),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pageLimit = _useState6[0],\n      setPageLimit = _useState6[1];\n\n  useEffect(function () {\n    function getTest() {\n      var response;\n      return _regeneratorRuntime.async(function getTest$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(getCharacter({\n                page: 1\n              }));\n\n            case 2:\n              response = _context.sent;\n              setCharacters(function (prevValues) {\n                return [].concat(_toConsumableArray(prevValues), _toConsumableArray(response.results));\n              });\n              setPageLimit(response.info.pages);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    getTest();\n  }, []);\n  useEffect(function () {\n    if (nextPage > pageLimit) {\n      return;\n    }\n\n    console.log(nextPage);\n\n    function getNext() {\n      var data, response, merged, removeDuplicates, filtered;\n      return _regeneratorRuntime.async(function getNext$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              removeDuplicates = function _removeDuplicates(array, key) {\n                var lookup = new Set();\n                return array.filter(function (obj) {\n                  return !lookup.has(obj[key]) && lookup.add(obj[key]);\n                });\n              };\n\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(fetch('https://rickandmortyapi.com/api/character/?page=' + nextPage));\n\n            case 3:\n              data = _context2.sent;\n              _context2.next = 6;\n              return _regeneratorRuntime.awrap(data.json());\n\n            case 6:\n              response = _context2.sent;\n              merged = [].concat(_toConsumableArray(characters), _toConsumableArray(response.results));\n              filtered = removeDuplicates(merged, 'id');\n              console.log(filtered);\n              setCharacters(filtered);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    getNext();\n  }, [nextPage]);\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 3\n    }\n  }, React.createElement(FlatList, {\n    centerContent: true,\n    numColumns: 1,\n    data: characters,\n    contentContainerStyle: {\n      maxWidth: 100\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 6\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }\n      }, React.createElement(Image, {\n        style: {\n          width: '100%',\n          height: 300\n        },\n        resizeMode: 'cover',\n        source: {\n          uri: item.image\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 8\n        }\n      })), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 8\n        }\n      }, item.name)));\n    },\n    keyExtractor: function keyExtractor(char) {\n      return char.id + \" - \" + char.name;\n    },\n    onEndReached: function onEndReached() {\n      if (nextPage) {\n        console.log('times');\n        console.log(nextPage + 1);\n        setNextPage(function (v) {\n          return parseInt(v + 1, 10);\n        });\n      }\n    },\n    onEndReachedThreshold: 0.1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }\n  }));\n}\nHomeScreen.navigationOptions = {\n  header: null\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["C:/Users/Mohammed/Documents/mohammedmulazada/reactnative/rick-and-morty-app-rn/screens/HomeScreen.js"],"names":["WebBrowser","React","useEffect","useState","ScrollView","MonoText","getCharacter","SafeAreaView","HomeScreen","characters","setCharacters","nextPage","setNextPage","undefined","pageLimit","setPageLimit","getTest","page","response","prevValues","results","info","pages","console","log","getNext","removeDuplicates","array","key","lookup","Set","filter","obj","has","add","fetch","data","json","merged","filtered","styles","container","maxWidth","item","width","height","uri","image","name","char","id","v","parseInt","navigationOptions","header","StyleSheet","create","flex"],"mappings":";;;;AAAA,OAAO,KAAKA,UAAZ,MAA4B,kBAA5B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;;AAUA,SAASC,UAAT,QAA2B,8BAA3B;AAEA,SAASC,QAAT;AACA,SAASC,YAAT;AACA,SAASC,YAAT,QAA6B,gCAA7B;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA,kBACAL,QAAQ,CAAC,EAAD,CADR;AAAA;AAAA,MAC7BM,UAD6B;AAAA,MACjBC,aADiB;;AAAA,mBAEJP,QAAQ,CAAC,CAAD,CAFJ;AAAA;AAAA,MAE7BQ,QAF6B;AAAA,MAEnBC,WAFmB;;AAAA,mBAGFT,QAAQ,CAACU,SAAD,CAHN;AAAA;AAAA,MAG7BC,SAH6B;AAAA,MAGlBC,YAHkB;;AAKpCb,EAAAA,SAAS,CAAC,YAAM;AACf,aAAec,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACwBV,YAAY,CAAC;AAAEW,gBAAAA,IAAI,EAAE;AAAR,eAAD,CADpC;;AAAA;AACOC,cAAAA,QADP;AAECR,cAAAA,aAAa,CAAC,UAACS,UAAD;AAAA,oDAAoBA,UAApB,sBAAmCD,QAAQ,CAACE,OAA5C;AAAA,eAAD,CAAb;AACAL,cAAAA,YAAY,CAACG,QAAQ,CAACG,IAAT,CAAcC,KAAf,CAAZ;;AAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKAN,IAAAA,OAAO;AACP,GAPQ,EAON,EAPM,CAAT;AASAd,EAAAA,SAAS,CAAC,YAAM;AACf,QAAIS,QAAQ,GAAGG,SAAf,EAA0B;AACzB;AACA;;AACDS,IAAAA,OAAO,CAACC,GAAR,CAAYb,QAAZ;;AACA,aAAec,OAAf;AAAA,kCAOUC,gBAPV;AAAA;AAAA;AAAA;AAAA;AAOUA,cAAAA,gBAPV,8BAO2BC,KAP3B,EAOkCC,GAPlC,EAOuC;AACrC,oBAAIC,MAAM,GAAG,IAAIC,GAAJ,EAAb;AACA,uBAAOH,KAAK,CAACI,MAAN,CACN,UAACC,GAAD;AAAA,yBAAS,CAACH,MAAM,CAACI,GAAP,CAAWD,GAAG,CAACJ,GAAD,CAAd,CAAD,IAAyBC,MAAM,CAACK,GAAP,CAAWF,GAAG,CAACJ,GAAD,CAAd,CAAlC;AAAA,iBADM,CAAP;AAGA,eAZF;;AAAA;AAAA,+CACoBO,KAAK,CACvB,qDAAqDxB,QAD9B,CADzB;;AAAA;AACOyB,cAAAA,IADP;AAAA;AAAA,+CAIwBA,IAAI,CAACC,IAAL,EAJxB;;AAAA;AAIOnB,cAAAA,QAJP;AAMOoB,cAAAA,MANP,gCAMoB7B,UANpB,sBAMmCS,QAAQ,CAACE,OAN5C;AAaOmB,cAAAA,QAbP,GAakBb,gBAAgB,CAACY,MAAD,EAAS,IAAT,CAblC;AAcCf,cAAAA,OAAO,CAACC,GAAR,CAAYe,QAAZ;AACA7B,cAAAA,aAAa,CAAC6B,QAAD,CAAb;;AAfD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAkBAd,IAAAA,OAAO;AACP,GAxBQ,EAwBN,CAACd,QAAD,CAxBM,CAAT;AA0BA,SACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE6B,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,QAAD;AACC,IAAA,aAAa,EAAE,IADhB;AAEC,IAAA,UAAU,EAAE,CAFb;AAGC,IAAA,IAAI,EAAEhC,UAHP;AAIC,IAAA,qBAAqB,EAAE;AAAEiC,MAAAA,QAAQ,EAAE;AAAZ,KAJxB;AAKC,IAAA,UAAU,EAAE;AAAA,UAAGC,IAAH,QAAGA,IAAH;AAAA,aACX,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,KAAD;AACC,QAAA,KAAK,EAAE;AACNC,UAAAA,KAAK,EAAE,MADD;AAENC,UAAAA,MAAM,EAAE;AAFF,SADR;AAKC,QAAA,UAAU,EAAE,OALb;AAMC,QAAA,MAAM,EAAE;AAAEC,UAAAA,GAAG,EAAEH,IAAI,CAACI;AAAZ,SANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADD,EAYC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOJ,IAAI,CAACK,IAAZ,CADD,CAZD,CADW;AAAA,KALb;AAuBC,IAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,aAAaA,IAAI,CAACC,EAAlB,WAA0BD,IAAI,CAACD,IAA/B;AAAA,KAvBf;AAwBC,IAAA,YAAY,EAAE,wBAAM;AACnB,UAAIrC,QAAJ,EAAc;AACbY,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYb,QAAQ,GAAG,CAAvB;AACAC,QAAAA,WAAW,CAAC,UAACuC,CAAD;AAAA,iBAAOC,QAAQ,CAACD,CAAC,GAAG,CAAL,EAAQ,EAAR,CAAf;AAAA,SAAD,CAAX;AACA;AACD,KA9BF;AA+BC,IAAA,qBAAqB,EAAE,GA/BxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD;AA2CA;AAED3C,UAAU,CAAC6C,iBAAX,GAA+B;AAC9BC,EAAAA,MAAM,EAAE;AADsB,CAA/B;AAIA,IAAMd,MAAM,GAAGe,UAAU,CAACC,MAAX,CAAkB;AAChCf,EAAAA,SAAS,EAAE;AACVgB,IAAAA,IAAI,EAAE;AADI;AADqB,CAAlB,CAAf","sourcesContent":["import * as WebBrowser from 'expo-web-browser';\nimport React, { useEffect, useState } from 'react';\nimport {\n\tImage,\n\tPlatform,\n\tStyleSheet,\n\tText,\n\tTouchableOpacity,\n\tView,\n\tFlatList,\n} from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\n\nimport { MonoText } from '../components/StyledText';\nimport { getCharacter } from '../hooks/useApi';\nimport { SafeAreaView } from 'react-native-safe-area-context';\n\nexport default function HomeScreen() {\n\tconst [characters, setCharacters] = useState([]);\n\tconst [nextPage, setNextPage] = useState(1);\n\tconst [pageLimit, setPageLimit] = useState(undefined);\n\n\tuseEffect(() => {\n\t\tasync function getTest() {\n\t\t\tconst response = await getCharacter({ page: 1 });\n\t\t\tsetCharacters((prevValues) => [...prevValues, ...response.results]);\n\t\t\tsetPageLimit(response.info.pages);\n\t\t}\n\t\tgetTest();\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (nextPage > pageLimit) {\n\t\t\treturn;\n\t\t}\n\t\tconsole.log(nextPage);\n\t\tasync function getNext() {\n\t\t\tconst data = await fetch(\n\t\t\t\t'https://rickandmortyapi.com/api/character/?page=' + nextPage,\n\t\t\t);\n\t\t\tconst response = await data.json();\n\n\t\t\tconst merged = [...characters, ...response.results];\n\t\t\tfunction removeDuplicates(array, key) {\n\t\t\t\tlet lookup = new Set();\n\t\t\t\treturn array.filter(\n\t\t\t\t\t(obj) => !lookup.has(obj[key]) && lookup.add(obj[key]),\n\t\t\t\t);\n\t\t\t}\n\t\t\tconst filtered = removeDuplicates(merged, 'id');\n\t\t\tconsole.log(filtered);\n\t\t\tsetCharacters(filtered);\n\t\t}\n\n\t\tgetNext();\n\t}, [nextPage]);\n\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t<FlatList\n\t\t\t\tcenterContent={true}\n\t\t\t\tnumColumns={1}\n\t\t\t\tdata={characters}\n\t\t\t\tcontentContainerStyle={{ maxWidth: 100 }}\n\t\t\t\trenderItem={({ item }) => (\n\t\t\t\t\t<View>\n\t\t\t\t\t\t<View>\n\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\t\theight: 300,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tresizeMode={'cover'}\n\t\t\t\t\t\t\t\tsource={{ uri: item.image }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t<View>\n\t\t\t\t\t\t\t<Text>{item.name}</Text>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t</View>\n\t\t\t\t)}\n\t\t\t\tkeyExtractor={(char) => `${char.id} - ${char.name}`}\n\t\t\t\tonEndReached={() => {\n\t\t\t\t\tif (nextPage) {\n\t\t\t\t\t\tconsole.log('times');\n\t\t\t\t\t\tconsole.log(nextPage + 1);\n\t\t\t\t\t\tsetNextPage((v) => parseInt(v + 1, 10));\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tonEndReachedThreshold={0.1}\n\t\t\t/>\n\t\t\t{/* <View style={styles.getStartedContainer}>\n\t\t\t\t\t{characters.length &&\n\t\t\t\t\t\tcharacters.map((char) => {\n\t\t\t\t\t\t\treturn <p>{char.name}</p>;\n\t\t\t\t\t\t})}\n\t\t\t\t</View> */}\n\t\t</View>\n\t);\n}\n\nHomeScreen.navigationOptions = {\n\theader: null,\n};\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t},\n});\n"]},"metadata":{},"sourceType":"module"}